getwd()
setwd("./Copy/Learning/Data Science/John Hopkins")
dir()
setwd("./Exploratory Data Analysis/project1")
gewtd()
dir()
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot1.R')
head(powercon)
tail(powercon$Global_active_power)
?png
?hist
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
head(powercon$Date)
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
head(powercon)
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
?cbind
library(dplyr)
?paste
powercon$Time
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
powercon1 <- mutate(powercon, DateTime = strptime(paste(powercon$Date, powercon$Time), format = "%Y-%m-%d %H:%M:%S")
)
powerconDate <- strptime(paste(powercon$Date, powercon$Time), "%Y-%m-%d"))
powerconDate <- strptime(paste(powercon$Date, powercon$Time), "%Y-%m-%d")
powerconDate
powerconDate <- strptime(paste(powercon$Date, powercon$Time), "%Y-%m-%d %H:%M:%S"))
powerconDate <- strptime(paste(powercon$Date, powercon$Time), "%Y-%m-%d %H:%M:%S")
powerconDate
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
powercon
powercon <- read.table("household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?")
head(powercon)
powercon <- powercon[(powercon$Date == "01/02/2007" | powercon$Date == "02/02/2007"),]
class(powercon$Date)
powercon <- read.table("household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?")
powercon <- mutate(powercon, DateTime = paste(powercon$Date, powercon$Time))
powercon$Date <- as.Date(powercon$Date, format = "%d/%m/%Y")
powercon <- powercon[(powercon$Date == "2007-02-01" | powercon$Date == "2007-02-02"),]
powercon$DateTime <- strptime(powercon$DateTime, format = "%d/%m/%Y %H:%M:%S")
head(powercon)
rm(powerconDate)
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
class(powercon$DateTime)
class(powercon$Date)
?strptime
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
powercon$DateTime
class(powercon$DateTime)
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
class(powercon$DateTime)
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
class(powercon$DateTime)
plot(powercon$Global_active_power ~ powercon$DateTime,
ylab = "Global Active Power (kilowatts)")
powercon$DateTime <- as.Date(strptime(powercon$DateTime, format = "%d/%m/%Y %H:%M:%S"))
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
png("globalactivepowerLine.png", width = 480, height = 480)
plot(powercon$Global_active_power ~ powercon$DateTime,
ylab = "Global Active Power (kilowatts)")
class(powercon$DateTime)
head(powercon$DateTime)
powercon$DateTime[1]
powercon$DateTime[12
]
powercon$DateTime[2]
class(powercon$DateTime[1])
head)powercon)
head(powercon)
powercon <- read.table("household_power_consumption.txt", sep = ";", header = TRUE, na.strings = "?", stringsAsFactors = FALSE)
powercon <- powercon[(powercon$Date == "01/02/2007" | powercon$Date == "02/02/2007"),]
powercon <- mutate(powercon, DateTime = paste(powercon$Date, powercon$Time))
powercon$DateTime <- strptime(powercon$DateTime, format = "%d/%m/%Y %H:%M:%S")
class(powercon$Date)
powercon
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
with (powercon, Global_active_power ~ DateTime,
ylab = "Global Active Power (kilowatts)")
with (powercon, Global_active_power ~ DateTime,
ylab = "Global Active Power (kilowatts)")png("globalactivepowerLine.png", width = 480, height = 480)
with (powercon, plot(Global_active_power ~ DateTime,
ylab = "Global Active Power (kilowatts)"))
dev.off()
png("globalactivepowerLine.png", width = 480, height = 480)
with (powercon, plot(Global_active_power ~ DateTime,
ylab = "Global Active Power (kilowatts)"))
dev.off()
dev.off()
dev.cur()
dev.list
dev.list()
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
for (i in length(powercon$DateTime)) { if (class(powercon$DateTime[i]}) == POSIXlt) { print (i) } }
for (i in length(powercon$DateTime)) { if (class(powercon$DateTime[i]}) == POSIXlt) { print (i) }
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
powercon$DateTime
head(powercon$DateTime)
class(powercon$DateTime)
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
head(powercon)
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot2.R')
?plot
source('~/.active-rstudio-document')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
names(powercon)
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot4.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot4.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot4.R')
source('~/Copy/Learning/Data Science/John Hopkins/Exploratory Data Analysis/project1/plot3.R')
getwd()
setwd("../project2")
dir()
SCC <- readRDS("summarySCC_PM25.rds")
names(SCC)
head(SCC)
NEI <- readRDS("Source_Classification_Code.rds")
head(NEI)
NEI$Short.Name
coalscc = NEI$Short.Name[grep("coal", NEI$Short.Name, ignore.case=TRUE),]
coalscc = NEI$Short.Name[grep("coal", NEI$Short.Name, ignore.case=TRUE)]
coalscc
head(NEI)
NEI$EI.Sector[row.names == "Coal Mining, Cleaning & Material Handling /Haul Roads: General"]
NEI$EI.Sector["Coal Mining, Cleaning & Material Handling /Haul Roads: General"]
NEI["Coal Mining, Cleaning & Material Handling /Haul Roads: General"]
NEI["Coal Mining, Cleaning & Material Handling /Haul Roads: General",]
NEI[NEI$Short.Name == "Coal Mining, Cleaning & Material Handling /Haul Roads: General",]
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator <- rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam <- spam[trainIndicator == 1, ]
testSpam <- spam[trainIndicator == 0, ]
names(trainSpam)
head(trainSpam)
plot(trainSpam$capitalAve ~ trainSpam$type)
dev.cur
dev.cur()
dev.off()
dev.off()
dev.list
dev.list()
graphics.off()
dev.list()
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam[, 1:4] + 1))
hCluster = hclust(dist(t(trainSpam[, 1:57])))
plot(hCluster)
hClusterU = hclust(dist(t(log10(trainSpam[, 1:55] + 1)))
)
plot(hClusterU)
trainSpam$numType <- as.numeric(trainSpam$type) - 1
costFunction <- function(x, y) sum(x != (y > 0.5))
cvError <- rep(NA, 55)
library(boot)
for(i in 1:55) {
lmFormula <- reformulate(names(trainSpam)[i], response = "numType")
glmFit <- glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] <- cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
names(trainSpam)[which.min(cvError)]
source('~/.active-rstudio-document', echo=TRUE)
getwd()
dir()
getwd()
getwd()
setwd("../../Reproducible Research/project1")
getwD()
getwd()
dir()
activity <- read.csv("activity.csv")
head(activity)
names(activity)
summary(activity)
class(activity)
class(activity$steps)
str(activity)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
str(activity)
activity$date <- as.Date(activity$date)
str(activity)
activity  <- na.rm(activity)
?na.omit
activity1 <- activity[na.omit(activity$steps), ]
str(activity1)
head(activity1)
activity1 <- activity[na.omit(activity), ]
activity1 <- activity[na.omit(activity$steps), ]
head(activity1)
activity1 <- activity[complete.cases(activity), ]
head(activity1)
str(activity1)
tail(activity1$date)
head(activity1$date)
hist(activity1)
hist(activity1$steps
)
library(ggplot2)
stepPlot <- ggplot(activity1, aes(x = date, y = steps)) + geom_histogram()
View(stepPlot)
dev.off()
quartz()
stepPlot <- ggplot(activity1, aes(x = date, y = steps)) + geom_histogram()
stepPlot <- ggplot(activity1, aes(x = date, y = steps)) + geom_histogram(stat = "identity")
stepPlot  <-  stepPlot + labs(title = "Steps per day", y = "Steps", x = "Date")
dev.off()
head(activity1)
str(activity1)
group_by(activity1, steps, date)
activity2 <- group_by(activity1, steps, date)
summarize(activity2, id.vars = date, measure.vars = sum(steps))
summarize(activity2, id.vars = date, measure.vars = steps)
?summarize
summarize(activity2, Total = sum(steps))
lalala <- summarize(activity2, Total = sum(steps))
View(lalala)
View(activity1)
activity1_4oct <- activity1[activity1$date == "2012-10-04"]
activity1_4oct <- activity1[activity1$date == "2012-10-04",]
activity1_4oct
sum(activity1_4oct$steps)
activity2
View(activity2)
View(lalala)
activity2
activity2 <- group_by(activity1, date)
activity2
summarise(activity2)
summarise(activity2, steps = sum(steps))
activity_sum <- summarise(activity2, steps = sum(steps))
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
View(activity)
View(activity_sum)
stepMean <- mean(activity_sum$steps)
stepMedian <- median(activity_sum$steps)
stepMedian
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
View(activity)
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
View(activity_sumTime
()
)
View(activity_sumTime)
tail(activity_sumTime)
lalala <- activity[activity$date == "2012-10-02", ]
tail(lalala)
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
max(activity_sumTime$steps)
?ma
?max
activity_sumTime[max(activity_sumTime$steps), ]
activity_sumTime[max(activity_sumTime$steps), 1]
activity_sumTime[activity_sumTime$steps == max(activity_sumTime$steps), 1]
activity_sumTime[activity_sumTime$steps == max(activity_sumTime$steps), ]
activity_sumTime[activity_sumTime$steps == max(activity_sumTime$steps), 1]
View(activity)
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
rm(activity_sum, activity1, activity1_4oct, activity2)
ls()
rm(list == ls())
rm(list = ls())
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
activity1 <- read.csv("activity.csv", stringsAsFactors = FALSE)
2304+15264
length(activity1)
head(activity_sumTime)
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
head(activityPlus)
is.na(activityPlus$steps[1])
nrow(activityPlus)
activityPlus$steps[1]
activity_sumTime[activity_sumTime$interval == activityPlus$interval[i], 2]
activity_sumTime[activity_sumTime$interval == activityPlus$interval[1], 2]
activityPlus$steps[i] <- activity_sumTime[activity_sumTime$interval == activityPlus$interval[i], 2]
activityPlus[1]
activityPlus[1,]
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
activityPlus$steps[1]
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
head(activityPlus)
activityPlus$steps[1] <- activity_sumTime[activity_sumTime$interval == activityPlus$interval[1], 2]
head(activityPlus)
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
head(activityPlus)
head(activity)
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
class(activityPlus$steps)
class(activity$steps)
as.integer(activityPlus$steps)
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
?weekdays
head(activityPlus)
weekdays(activityPlus[1, 2])
activityPlus$date <- as.Date(activityPlus$date)
weekdays(activityPlus[1, 2])
weekdays(activityPlus[1, 2], TRUE)
?cbind
?'$'
x <- weekdays(activityPlus$date, TRUE) == "Sun"|"Sat"
x <- weekdays(activityPlus$date, TRUE) == "Sun" | "Sat"
x <- weekdays(activityPlus$date, TRUE)
x
x
x
head(x)
weekdays("2012-10-01")
weekdays(as.Date("2012-10-01"))
x1 <- x == "Sun"
x1
x1 <- x == "Sun" | x == "Sat"
x1
x <- weekdays(activityPlus$date, TRUE) == "Sat" | weekdays(activityPlus$date, TRUE) == "Sun"
x
head(x)
x
fillWeek <- weekdays(activityPlus$date, TRUE) == "Sat" | weekdays(activityPlus$date, TRUE) == "Sun"
for (i in 1:length(fillWeek)) {
if (fillWeek[i]) {
fillWeek[i] <- "Weekend"
} else {
fillWeek[i] <- "Weekday"
}
}
fillWeek
activityPlusDate <- cbind(activityPlus, fillWeek)
head(activityPlusDate)
?cbind
colnames(activityPlusDate)
?mean
activityPlusDate
activityWeekday <- activityPlusDate[activityPlusDate$fillWeek == "Weekday", ]
activityWeekday
head(activityWeekday)
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
source('~/Copy/Learning/Data Science/John Hopkins/Reproducible Research/project1/test1.R')
